{"version":3,"sources":["App.tsx","bootstrap/reportWebVitals.ts","index.tsx"],"names":["App","useState","pass","setPass","sanitizedPass","trim","toLowerCase","replace","console","log","content","decrypted","cipher","decipher","CryptoJS","AES","decrypt","toString","enc","Utf8","e","startsWith","style","color","href","className","margin","type","name","onChange","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","clear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQA8DeA,MA1Cf,WACG,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAgBF,EAAKG,OAAOC,cAAcC,QAAQ,KAAM,IAC9DC,QAAQC,IAAIL,GAEZ,IAQIM,EANAC,EAAY,GAChB,IACGA,EAfN,SAAiBT,EAAcU,GAC5B,IAAIC,EAAWC,IAASC,IAAIC,QAAQJ,EAAQV,GAE5C,OADWW,EAASI,SAASH,IAASI,IAAIC,MAa3BH,CAAQZ,EAJL,gHAKhB,MAAOgB,IAeT,OAVGV,EADS,IAARR,EACS,yBACFS,EAAUU,WAAW,QACnB,iCACP,sEACA,4BAAG,mBAAGC,MAAO,CAAEC,MAAO,QAAUC,KAAMb,EAAnC,+BAGI,wEAIV,qBAAKc,UAAU,kBAAf,SACG,gCACG,iGAIA,mBAAGH,MAAO,CAAEI,OAAQ,QAApB,SACG,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,SAAU,SAACT,GAAD,OAAOjB,EAAQiB,EAAEU,OAAOC,YAGnErB,QC1CEsB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdzB,QAAQiC,QAERC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bd,M","file":"static/js/main.bc72ca61.chunk.js","sourcesContent":["import './bootstrap/App.css'\nimport 'normalize.css'\n\nimport CryptoJS from 'crypto-js'\nimport React, { useState } from 'react'\n\n/*\nfunction encrypt(pass: string, clear: string): string {\n   var cipher = CryptoJS.AES.encrypt(clear, pass)\n   cipher = cipher.toString()\n   return cipher\n}\n*/\n\nfunction decrypt(pass: string, cipher: string): string {\n   var decipher = CryptoJS.AES.decrypt(cipher, pass);\n   decipher = decipher.toString(CryptoJS.enc.Utf8);\n   return decipher\n}\n\nfunction App() {\n   const [pass, setPass] = useState(\"\")\n   const sanitizedPass = pass.trim().toLowerCase().replace(/e$/, '')\n   console.log(sanitizedPass)\n\n   const encrypted = 'U2FsdGVkX19LcoWhtjCh0qzjfzCSSoAa3SEhRVvpNZV4nQXYj5adpWZw1CvMemFmEQ1Qbtgi+rqeOueY3BPp2Lhnzmbj6j+E/zxLHia774g='\n\n   let decrypted = \"\";\n   try {\n      decrypted = decrypt(sanitizedPass, encrypted)\n   } catch (e) {\n   }\n\n   let content;\n   if (pass == \"\") {\n      content = <span></span>\n   } else if (decrypted.startsWith('http')) {\n      content = <span>\n         <p>Parabéns! Esse foi o nome correto!</p>\n         <p><a style={{ color: \"pink\" }} href={decrypted}>link secreto</a></p>\n      </span>\n   } else {\n      content = <p>Esse não parece um nome válido...</p>\n   }\n\n   return (\n      <div className='App full-height'>\n         <div>\n            <h3>\n               Para prosseguir você deve inserir o nome de uma tchuculinha:\n            </h3>\n\n            <p style={{ margin: \"20pt\" }}>\n               <input type=\"text\" name=\"name\" onChange={(e) => setPass(e.target.value)} />\n            </p>\n\n            {content}\n         </div>\n      </div>\n   )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './bootstrap/index.css'\nimport App from './App'\nimport reportWebVitals from './bootstrap/reportWebVitals'\n\nconsole.clear()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}